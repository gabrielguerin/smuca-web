<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>
<div class="w-full px-4 mb-12 xl:mb-0">
  <div class="relative flex flex-col w-full min-w-0 mb-6 break-words bg-white rounded shadow-lg">
    <div class="px-4 py-3 mb-0 border-0 rounded-t">
      <div class="flex flex-wrap items-center">
        <div class="relative flex-1 flex-grow w-full max-w-full px-4">
          <h3 class="text-base font-semibold text-gray-700">
            <%= content_for(:title) %>
          </h3>
        </div>
        <div class="relative flex-1 flex-grow w-full max-w-full px-4 text-right">
          <%= link_to(t("administrate.actions.new_resource", name: display_resource_name(page.resource_name, singular: true).downcase), [:new, namespace, page.resource_path.to_sym], class: "inline-block px-6 py-2.5 bg-sky-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-sky-700 hover:shadow-lg focus:bg-sky-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-sky-800 active:shadow-lg transition duration-150 ease-in-out hover:text-white") if valid_action?(:new) && show_action?(:new, new_resource) %>
        </div>
      </div>
    </div>
    <div class="block w-full overflow-x-auto">
      <!-- Projects table -->
      <table class="items-center w-full bg-transparent border-collapse">
        <thead>
          <tr>
            <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
              <th class="cell-label cell-label--<%= attr_type.html_class %> cell-label--<%= collection_presenter.ordered_html_class(attr_name) %> cell-label--<%= "#{resource_name}_#{attr_name}" %> px-6 py-3 text-sm font-semibold text-left uppercase align-middle border border-l-0 border-r-0 border-solid bg-gray-50 text-gray-500 border-gray-100 whitespace-nowrap" scope="col" role="columnheader" aria-sort="<%= sort_order(collection_presenter.ordered_html_class(attr_name)) %>">
                <%= link_to(sanitized_order_params(page, collection_field_name).merge(collection_presenter.order_params_for(attr_name, key: collection_field_name))) do %>
                  <%= t("helpers.label.#{collection_presenter.resource_name}.#{attr_name}", default: resource_class.human_attribute_name(attr_name)).titleize %>
                  <% if collection_presenter.ordered_by?(attr_name) %>
                    <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(attr_name) %>">
                      <svg aria-hidden="true">
                        <use xlink:href="#icon-up-caret" />
                      </svg>
                    </span>
                  <% end %>
                <% end %>
              </th>
            <% end %>
            <%= render("collection_header_actions", collection_presenter: collection_presenter, page: page, resources: resources, table_title: "page-title" ) %>
          </tr>
        </thead>
        <tbody>
          <% resources.each do |resource| %>
            <tr class="transition duration-300 ease-in-out bg-white js-table-row hover:bg-gray-100"
              <% if show_action? :show, resource %>
                <%= %(tabindex=0 role=link data-url=#{polymorphic_path([namespace, resource])}) %>
              <% end %>
            >
              <% collection_presenter.attributes_for(resource).each do |attribute| %>
                <td class="cell-data cell-data--<%= attribute.html_class %> p-4 px-6 text-sm align-middle border-t-0 border-l-0 border-r-0 whitespace-nowrap">
                  <% if show_action? :show, resource -%>
                    <a href="<%= polymorphic_path([namespace, resource]) -%>" tabindex="-1" class="action-show">
                      <%= render_field attribute %>
                    </a>
                  <% else %>
                    <%= render_field attribute %>
                  <% end -%>
                </td>
              <% end %>
              <%= render("collection_item_actions", collection_presenter: collection_presenter, collection_field_name: collection_field_name, page: page, namespace: namespace, resource: resource, table_title: "page-title") %>
            </tr>
          <% end %>
        </tbody>
      </table>
      <% if resources.model.count > 25 %>
        <div class="px-6 my-5 text-gray-600 border-gray-300">
          <%= paginate resources, param_name: '_page' %>
        </div>
      <% end %>
    </div>
  </div>
</div>
